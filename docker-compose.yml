version: '3'

services:
    nginx:
        container_name: ng_${PROJECT_NAME}
        restart: always
        env_file: .env
        build:
            context:
                ./etc/nginx
            args:
                - ENV=develop
        ports:
            - ${WEBAPP_PORT}:80
        environment:
            - NGINX_HOST=localhost
            - NGINX_PORT=80
            - NGINX_TIMEOUT=3600
            # - FRONTEND_PORT=${FRONTEND_PORT}
        depends_on:
            - backend
        volumes:
            - ./etc/nginx/develop.conf:/etc/nginx/conf.d/mysite.template
            - ./etc/nginx/502.html:/var/www/502.html
            # - ./public:/public
            # - ./frontend/public:/frontend/public
        command: /bin/sh -c "envsubst '$$NGINX_HOST $$NGINX_PORT $$NGINX_TIMEOUT $$FRONTEND_PORT' < /etc/nginx/conf.d/mysite.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
        logging:
            driver: "json-file"
            options:
                max-size: "100m"
                max-file: "2"
    backend_db:
        env_file: .env
        container_name: backend_db.local
        build: ./etc/postgre # if need gis
        ports:
            - ${POSTGRES_OUT_PORT}:5432
        environment:
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        volumes:
            - db_backend_data:/var/lib/postgresql/data
        logging:
            driver: "json-file"
            options:
                max-size: "100m"
                max-file: "2"
    redis:
        container_name: redis.${PROJECT_NAME}
        image: redis:3.2
        restart: always
        volumes:
            - redis-data:/data
        logging:
            driver: "json-file"
            options:
                max-size: "100m"
                max-file: "2"
    backend:
        build:
            context: .
            args:
                - ENV=develop
        container_name: backend.${PROJECT_NAME}
        command: bash -c "while true; do echo 'I am alive!'; sleep 3600; done"
        environment:
            - C_FORCE_ROOT=true
            - ENV=develop
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - BACKEND_CONTAINER_NAME=backend_db.local
            - PROJECT_NAME=${PROJECT_NAME}
        depends_on:
            - backend_db
            - redis
        volumes:
            - .:/webapp
        ports:
            - "8000:8000"
        privileged: true
        cap_add:
            - SYS_ADMIN
            - DAC_READ_SEARCH
        logging:
            driver: "json-file"
            options:
                max-size: "100m"
                max-file: "2"

    nodejs14:
        build: ./frontend
        container_name: nodejs14.${PROJECT_NAME}
        env_file: .env
        ports:
            - ${FRONTEND_PORT}:${FRONTEND_PORT}
        command: bash -c "while true; do echo 'I am alive!'; sleep 3600; done"
        environment:
            - C_FORCE_ROOT=true
            - NODE_PATH=./source
            - NODE_ENV=develop
            - BACKEND_DOMAIN=http://backend.${PROJECT_NAME}:8000
            - GMAP_API_KEY=${GMAP_API_KEY}
            - PORT=${FRONTEND_PORT}
            - HOST=0.0.0.0
        volumes:
            - ./frontend:/frontend
        logging:
            driver: "json-file"
            options:
                max-size: "100m"
                max-file: "2"

volumes:
    db_backend_data:
    redis-data:
